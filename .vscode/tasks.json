{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build efr32 examples",
            "type": "shell",
            "windows": {
                "command": "./scripts/examples/gn_efr32_example.ps1"
            },
            "linux": {
                "command": "./scripts/examples/gn_efr32_example.sh"
            },
            "osx": {
                "command": "./scripts/examples/gn_efr32_example.sh"
            },
            "args": [
                "examples/${input:efr32Examples}/efr32/",
                "out/${input:efr32Examples}",
                "${input:efr32Boards}",
                "chip_build_libshell=false",
                "enable_openthread_cli=true",
                "show_qr_code=true"
            ],
            "group": "build",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/"]
            }
        },
        {
            "label": "Windows setup",
            "type": "shell",
            "command": "./scripts/windows_setup.ps1",
            "args": ["--${input:windowsSetupOptions}"],
            "group": "build",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": {
                "base": "$gcc",
                "fileLocation": ["relative", "${workspaceFolder}/out/"]
            }
        },
        {
            "label": "Bootstrap",
            "type": "shell",
            "command": "bash scripts/bootstrap.sh",
            "group": "build",
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "Flash EFR32 board",
            "type": "shell",
            "command": "python3",
            "group": "build",
            "args": [
                "${workspaceFolder}/out/${input:efr32Examples}/${input:efr32Boards}/chip-efr32-*.flash.py"
            ],
            "problemMatcher": {
                "base": "$gcc"
            }
        },
        {
            "label": "Copy Sample Application",
            "type": "shell",
            "linux": {
                "command": "./scripts/sl_new_app.sh"
            },
            "osx": {
                "command": "./scripts/sl_new_app.sh"
            },
            "args": [
                "-s",
                "examples/${input:efr32Examples}",
                "-b",
                "${input:efr32Boards}",
                "-d",
                "${input:dest}"
            ],
            "group": "build",
            "isBackground": false,
            "presentation": {
                "reveal": "always",
                "panel": "shared"
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "type": "pickString",
            "id": "efr32Examples",
            "description": "What efr32 example do you want to copy or build?",
            "options": [
                "lock-app",
                "lighting-app",
                "window-app",
                "light-switch-app",
                "thermostat",
                "shell"
            ],
            "default": "lighting-app"
        },
        {
            "type": "pickString",
            "id": "windowsSetupOptions",
            "description": "What would you like to excecute?",
            "options": ["setup", "cleanup"],
            "default": "setup"
        },
        {
            "type": "pickString",
            "id": "efr32Boards",
            "description": "What efr32 board do you want to use?",
            "options": [
                "BRD2601B",
                "BRD2703A",
                "BRD4161A",
                "BRD4162A",
                "BRD4163A",
                "BRD4164A",
                "BRD4166A",
                "BRD4170A",
                "BRD4304A",
                "BRD4316A",
                "BRD4317A",
                "BRD4319A",
                "BRD4186C",
                "BRD4187C"
            ],
            "default": "BRD4164A"
        },
        {
            "type": "pickString",
            "id": "openiotsdkDebugMode",
            "description": "Do you want to use debug mode?",
            "options": ["false", "true"],
            "default": "false"
        },
        {
            "type": "pickString",
            "id": "openiotsdkExample",
            "description": "What Open IoT SDK example application do you want to use?",
            "options": ["shell", "lock-app"],
            "default": "shell"
        },
        {
            "type": "pickString",
            "id": "openiotsdkUnitTest",
            "description": "What unit test do you want to use?",
            "options": [
                "all",
                "accesstest",
                "AppTests",
                "ASN1Tests",
                "BDXTests",
                "ChipCryptoTests",
                "ControllerTests",
                "CoreTests",
                "CredentialsTest",
                "DataModelTests",
                "InetLayerTests",
                "MdnsTests",
                "MessagingLayerTests",
                "MinimalMdnsCoreTests",
                "MinimalMdnsRecordsTests",
                "MinimalMdnsRespondersTests",
                "PlatformTests",
                "RawTransportTests",
                "RetransmitTests",
                "SecureChannelTests",
                "SetupPayloadTests",
                "SupportTests",
                "SystemLayerTests",
                "TestShell",
                "TransportLayerTests",
                "UserDirectedCommissioningTests"
            ],
            "default": "all"
        },
        {
            "type": "promptString",
            "id": "openiotsdkNetworkNamespace",
            "description": "Type the network namespace that you want to use. \"default\" means host default network namespace",
            "default": "default"
        },
        {
            "type": "promptString",
            "id": "openiotsdkNetworkInterface",
            "description": "Type the network interface name that you want to use. \"user\" means user network mode",
            "default": "user"
        },
        {
            "type": "promptString",
            "id": "dest",
            "description": "Please provide a new directory name for the copied application.",
            "default": ""
        }
    ]
}
